@use "reset";
@use "tokens";
@use "utils";

body {
  --center-size: #{utils.rem(1216)};

  padding: tokens.spacing(200);
  padding-block-end: tokens.spacing(600);
  background: tokens.$color-neutral-900;
  color: tokens.$color-neutral-0;
  color-scheme: dark;

  @include tokens.text-preset-6();

  @include tokens.breakpoint("tablet") {
    padding: tokens.spacing(300);
    padding-block-end: tokens.spacing(1000);
  }

  @include tokens.breakpoint("desktop") {
    padding-top: tokens.spacing(600);
  }
}

:focus-visible {
  @include tokens.outline-base;
}

.box {
  padding: var(--box-top-space, var(--box-y-space, var(--box-space)))
    var(--box-right-space, var(--box-x-space, var(--box-space)))
    var(--box-bottom-space, var(--box-y-space, var(--box-space)))
    var(--box-left-space, var(--box-x-space, var(--box-space)));
}

.center {
  display: grid;
  grid-template-columns:
    minmax(var(--center-gutter, #{tokens.spacing(0)}), 1fr) minmax(
      auto,
      var(--center-size)
    )
    minmax(var(--center-gutter, #{tokens.spacing(0)}), 1fr);
}

.center > * {
  grid-column-start: 2;
}

.cluster {
  display: flex;
  justify-content: var(--cluster-justify);
  align-items: center;
  flex-wrap: wrap;
  gap: var(--cluster-gap, #{tokens.spacing(200)});
}

.grid {
  display: grid;
  grid-template-columns: repeat(
    auto-fit,
    minmax(min(var(--grid-size), 100%), 1fr)
  );
  gap: var(--grid-space);
}

.stack {
  display: grid;
  gap: var(--stack-space);
}

.header {
  --cluster-justify: space-between;
}

.units-button {
  --outline-inner-color: #{tokens.$color-neutral-900};
  --outline-outer-color: #{tokens.$color-neutral-0};

  border: none;
  border-radius: utils.rem(12);
  outline: none;
  padding: tokens.spacing(150) tokens.spacing(200);
  display: grid;
  grid-template-columns: auto auto auto;
  align-items: center;
  gap: tokens.spacing(125);
  @include tokens.text-preset-7;
  background: tokens.$color-neutral-800;
  color: tokens.$color-neutral-0;
  @include tokens.transition((background-color, color));

  &[data-focus-visible] {
    @include tokens.outline;
    background: tokens.$color-neutral-700;
    color: tokens.$color-neutral-0;
  }

  &[data-hovered] {
    background: tokens.$color-neutral-700;
    color: tokens.$color-neutral-0;
  }

  .IconUnits {
    width: utils.rem(16);
    height: utils.rem(16);
  }

  .IconDropdown {
    width: utils.rem(13);
    height: utils.rem(8);
    @include tokens.transition((transform));
  }

  &[aria-expanded="true"] {
    .IconDropdown {
      transform: rotate(180deg);
    }
  }
}

.units-dialog {
  --stack-space: #{tokens.spacing("050")};

  min-width: utils.rem(214);
  border-radius: tokens.radius(12);
  padding: tokens.spacing(075) tokens.spacing(100);

  &__group {
    --stack-space: #{tokens.spacing(100)};
  }

  &__group-label {
    padding-block-start: utils.rem(6);
    padding-inline-start: utils.rem(8);
    @include tokens.text-preset-8;
    color: tokens.$color-neutral-300;
  }

  &__radios {
    --stack-space: #{tokens.spacing("050")};
  }
}

.dropdown-button {
  --outline-width: #{utils.rem(1)};
  --outline-offset: #{utils.rem(2)};
  --outline-inner-color: #{tokens.$color-neutral-800};
  --outline-outer-color: #{tokens.$color-neutral-0};

  border: none;
  border-radius: tokens.radius(8);
  outline: none;
  padding: tokens.spacing(125) tokens.spacing(100);
  display: grid;
  grid-template-columns: 1fr auto;
  align-items: center;
  gap: tokens.spacing(125);
  text-align: start;
  @include tokens.text-preset-7;
  background: transparent;
  color: tokens.$color-neutral-0;
  @include tokens.transition((background-color, color));

  &[data-selected] {
    background: tokens.$color-neutral-700;
    color: tokens.$color-neutral-0;
  }

  &[data-hovered] {
    background: tokens.$color-neutral-700;
    color: tokens.$color-neutral-0;
  }

  &[data-focus-visible] {
    @include tokens.outline;
    background: tokens.$color-neutral-700;
    color: tokens.$color-neutral-0;
  }

  &__icon {
    width: utils.rem(14);
    height: utils.rem(11);
  }
}

.separator {
  border-top: utils.rem(1) solid tokens.$color-neutral-600;
}

.search {
  --center-size: #{utils.rem(656)};

  &__form {
    display: grid;
    gap: tokens.spacing(150);

    @include tokens.breakpoint("tablet") {
      grid-template-columns: 1fr auto;
      gap: tokens.spacing(200);
    }
  }
}

.dashboard {
  display: grid;
  gap: tokens.spacing(400);

  @include tokens.breakpoint("desktop") {
    grid-template-columns: 800fr 384fr;
  }
}

.current {
  --box-space: #{tokens.spacing(250)};
  --grid-size: #{utils.rem(155)};
  --grid-space: #{tokens.spacing(200)};

  @include tokens.breakpoint("tablet") {
    --grid-space: #{tokens.spacing(250)};
  }

  @include tokens.breakpoint("desktop") {
    --grid-space: #{tokens.spacing(300)};
  }
}

.card {
  min-height: utils.rem(286);
  border-radius: tokens.radius(20);
  padding: tokens.spacing(300);
  display: grid;
  justify-content: center;
  align-content: center;
  gap: tokens.spacing(200);
  text-align: center;
  background: url(/images/bg-today-small.svg) center/cover
    tokens.$color-blue-700;

  &__weather {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: tokens.spacing(250);
  }

  &__weather-icon {
    width: utils.rem(120);
    min-width: utils.rem(0);
    height: auto;
  }

  @include tokens.breakpoint("tablet") {
    grid-template-columns: auto auto;
    justify-content: space-between;
    align-items: center;
    text-align: start;
    background-image: url(/images/bg-today-large.svg);
  }
}

.daily {
  --box-x-space: #{tokens.spacing(125)};
  --box-y-space: #{tokens.spacing(200)};
  --grid-size: #{utils.rem(80)};
  --grid-space: #{tokens.spacing(200)};
  --stack-space: #{tokens.spacing(200)};
}

.day {
  &__icon {
    justify-self: center;
  }

  &__temperature {
    display: grid;
    grid-template-columns: auto auto;
    justify-content: space-between;
  }
}

.hourly {
  --box-space: #{tokens.spacing(300)};
  --cluster-justify: space-between;
  --stack-space: #{tokens.spacing(200)};
}

.hours {
  --box-y-space: #{tokens.spacing(125)};
  --box-right-space: #{tokens.spacing(200)};
  --box-left-space: #{tokens.spacing(150)};

  &__item {
    display: grid;
    grid-template-columns: auto 1fr auto;
    align-items: center;
    gap: tokens.spacing(100);

    & > :nth-child(2) {
      order: -1;
    }
  }
}

.primary-button {
  --outline-inner-color: #{tokens.$color-neutral-900};
  --outline-outer-color: #{tokens.$color-blue-500};

  border: none;
  border-radius: tokens.radius(12);
  padding: tokens.spacing(200) tokens.spacing(300);
  @include tokens.text-preset-5--medium();
  background: tokens.$color-blue-700;
  color: tokens.$color-neutral-0;
  @include tokens.transition((background-color));

  &:focus-visible {
    @include tokens.outline;
    background: tokens.$color-blue-500;
  }

  @include utils.hover {
    background: tokens.$color-blue-500;
  }
}

.search-input {
  position: relative;

  &__input {
    --outline-inner-color: #{tokens.$color-neutral-900};
    --outline-outer-color: #{tokens.$color-neutral-0};

    width: 100%;
    border: none;
    border-radius: tokens.radius(12);
    padding: tokens.spacing(200) tokens.spacing(300) tokens.spacing(200)
      utils.rem(60);
    @include tokens.text-preset-5--medium();
    background: tokens.$color-neutral-800;
    color: tokens.$color-neutral-200;
    @include tokens.transition((background-color));

    &::placeholder {
      color: inherit;
    }

    &:focus-visible {
      @include tokens.outline;
    }

    @include utils.hover {
      background: tokens.$color-neutral-700;
    }
  }

  &__icon {
    pointer-events: none;
    position: absolute;
    inset-block: 0px;
    inset-inline-start: utils.rem(24);
    margin-block: auto;
    width: utils.rem(21);
    height: utils.rem(21);
  }
}

.date-select {
  .react-aria-Button {
    border: none;
    border-radius: tokens.radius(8);
    padding: tokens.spacing(100) tokens.spacing(200);
    display: inline-grid;
    grid-template-columns: auto auto;
    align-items: center;
    gap: tokens.spacing(150);
    @include tokens.text-preset-7;
    background: tokens.$color-neutral-600;
    color: tokens.$color-neutral-0;
    @include tokens.transition((background-color, color));

    &[data-focus-visible] {
      // Can't find in design
      background: hsl(243 23% 36%);
      color: tokens.$color-neutral-0;
    }

    &[data-hovered] {
      background: hsl(243 23% 36%);
      color: tokens.$color-neutral-0;
    }

    .IconDropdown {
      width: utils.rem(13);
      height: utils.rem(8);
      @include tokens.transition((transform));
    }

    &[aria-expanded="true"] {
      .IconDropdown {
        transform: rotate(180deg);
      }
    }
  }

  &__popover {
    .react-aria-ListBox {
      min-width: utils.rem(214);
      border-radius: tokens.radius(12);
      padding: tokens.spacing(100);
      display: grid;
      gap: tokens.spacing("050");
      @include tokens.text-preset-7;
      background: tokens.$color-neutral-800;
      color: tokens.$color-neutral-0;
    }

    .react-aria-ListBoxItem {
      border-radius: tokens.radius(8);
      outline: none;
      padding: tokens.spacing(125) tokens.spacing(100);

      &[data-focused] {
        background: tokens.$color-neutral-700;
        color: tokens.$color-neutral-0;

        @include utils.forced-colors {
          @include tokens.outline-base;
        }
      }
    }
  }
}

@each $key, $value in tokens.$spacing {
  .mt-#{$key} {
    margin-top: $value;
  }
}

@each $key, $value in tokens.$spacing {
  .p-#{$key} {
    padding: $value;
  }
}

@each $key, $value in tokens.$radius {
  .radius-#{$key} {
    border-radius: $value;
  }
}

.text-preset-1 {
  @include tokens.text-preset-1();
}
.text-preset-2 {
  @include tokens.text-preset-2();
}
.text-preset-3 {
  @include tokens.text-preset-3();
}
.text-preset-4 {
  @include tokens.text-preset-4();
}
.text-preset-5 {
  @include tokens.text-preset-5();
}
.text-preset-5--medium {
  @include tokens.text-preset-5--medium();
}
.text-preset-6 {
  @include tokens.text-preset-6();
}
.text-preset-7 {
  @include tokens.text-preset-7();
}
.text-preset-8 {
  @include tokens.text-preset-8();
}

.text-center {
  text-align: center;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.size-40 {
  width: utils.rem(40);
  height: utils.rem(40);
}
.size-60 {
  width: utils.rem(60);
  height: utils.rem(60);
}

.layer-1 {
  background: tokens.$color-neutral-800;
  color: tokens.$color-neutral-0;
}
.layer-2 {
  background: tokens.$color-neutral-700;
  color: tokens.$color-neutral-0;
}

@include tokens.breakpoint("tablet") {
  @each $key, $value in tokens.$spacing {
    .tablet\:mt-#{$key} {
      margin-top: $value;
    }
  }
}

@include tokens.breakpoint("desktop") {
  @each $key, $value in tokens.$spacing {
    .desktop\:mt-#{$key} {
      margin-top: $value;
    }
  }
}
