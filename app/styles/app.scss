@use "reset";
@use "tokens";
@use "utils";

body {
  --center-size: #{utils.rem(1216)};

  padding: tokens.spacing(200);
  padding-block-end: tokens.spacing(600);
  background: tokens.$color-neutral-900;
  color: tokens.$color-neutral-0;
  color-scheme: dark;

  @include tokens.text-preset-6();
}

.center {
  display: grid;
  grid-template-columns:
    minmax(var(--center-gutter, #{tokens.spacing(0)}), 1fr) minmax(
      auto,
      var(--center-size)
    )
    minmax(var(--center-gutter, #{tokens.spacing(0)}), 1fr);
}

.center > * {
  grid-column-start: 2;
}

.cluster {
  display: flex;
  justify-content: var(--cluster-justify);
  align-items: center;
  flex-wrap: wrap;
  gap: var(--cluster-gap, #{tokens.spacing(200)});
}

.grid {
  display: grid;
  grid-template-columns: repeat(
    auto-fit,
    minmax(min(var(--grid-size), 100%), 1fr)
  );
  gap: var(--grid-space);
}

.stack {
  display: grid;
  gap: var(--stack-space);
}

.header {
  --cluster-justify: space-between;
}

.dashboard {
  display: grid;
  gap: tokens.spacing(400);
}

.current {
  --grid-size: #{utils.rem(100)};
  --grid-space: #{tokens.spacing(200)};
}

.daily {
  --grid-size: #{utils.rem(80)};
  --grid-space: #{tokens.spacing(200)};
}

.hourly {
  --cluster-justify: space-between;
  --stack-space: #{tokens.spacing(200)};
}

@each $key, $value in tokens.$spacing {
  .mt-#{$key} {
    margin-top: $value;
  }
}

.text-preset-1 {
  @include tokens.text-preset-1();
}
.text-preset-2 {
  @include tokens.text-preset-2();
}
.text-preset-3 {
  @include tokens.text-preset-3();
}
.text-preset-4 {
  @include tokens.text-preset-4();
}
.text-preset-5 {
  @include tokens.text-preset-5();
}
.text-preset-5--medium {
  @include tokens.text-preset-5--medium();
}
.text-preset-6 {
  @include tokens.text-preset-6();
}
.text-preset-7 {
  @include tokens.text-preset-7();
}
.text-preset-8 {
  @include tokens.text-preset-8();
}

.text-center {
  text-align: center;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

@each $key, $value in tokens.$spacing {
  @media (min-width: tokens.breakpoint("tablet")) {
    .tablet\:mt-#{$key} {
      margin-top: $value;
    }
  }
}

@each $key, $value in tokens.$spacing {
  @media (min-width: tokens.breakpoint("desktop")) {
    .desktop\:mt-#{$key} {
      margin-top: $value;
    }
  }
}

@media (min-width: tokens.breakpoint("tablet")) {
  body {
    padding: tokens.spacing(300);
    padding-block-end: tokens.spacing(1000);
  }

  .current {
    --grid-space: #{tokens.spacing(250)};
  }
}

@media (min-width: tokens.breakpoint("desktop")) {
  body {
    padding-top: tokens.spacing(600);
  }

  .dashboard {
    grid-template-columns: 800fr 384fr;
  }

  .current {
    --grid-space: #{tokens.spacing(300)};
  }
}
